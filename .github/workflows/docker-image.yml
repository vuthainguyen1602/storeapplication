name: CI/CD with SonarCloud & Deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build-test-sonar-deploy:
    runs-on: ubuntu-latest
    environment: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    # ---------------------------
    # Checkstyle
    # ---------------------------
    - name: Run Checkstyle
      run: mvn checkstyle:checkstyle

    # ---------------------------
    # Unit Test
    # ---------------------------
    - name: Run Unit Tests
      run: mvn -B test

    # ---------------------------
    # Integration Test
    # ---------------------------
    - name: Run Integration Tests
      run: mvn -B verify -Pintegration-test

    # ---------------------------
    # SonarCloud Analysis
    # ---------------------------
    - name: SonarCloud Analysis
      run: mvn -B verify sonar:sonar -Psonarcloud,ci \
        -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
        -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
        -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

    # ---------------------------
    # Build Docker image
    # ---------------------------
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PASS }}

    - name: Build & Push Docker Image
      run: |
        IMAGE_NAME=${{ secrets.DOCKERHUB_USER }}/storeapplication
        docker build -t $IMAGE_NAME:latest .
        docker push $IMAGE_NAME:latest

    # ---------------------------
    # Deploy to EC2
    # ---------------------------
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          docker pull ${{ secrets.DOCKERHUB_USER }}/storeapplication:latest
          docker stop storeapp || true
          docker rm storeapp || true
          docker run -d --name storeapp \
            -p 8080:8080 \
            --restart=always \
            ${{ secrets.DOCKERHUB_USER }}/storeapplication:latest
